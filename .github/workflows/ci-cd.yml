name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: buddyspuds/presswire-v2

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Run basic test
      run: |
        python test_basic.py
        echo "✅ Tests passed"

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: |
          presswire-v2:latest
          presswire-v2:${{ github.sha }}
        outputs: type=docker,dest=/tmp/presswire-v2.tar

    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: /tmp/presswire-v2.tar
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Check for Digital Ocean credentials
      id: check_do
      run: |
        if [ -z "${{ secrets.DO_APP_ID }}" ]; then
          echo "⏸️ Skipping deployment - DO_APP_ID not configured"
          echo "To enable deployment:"
          echo "1. Create app at https://cloud.digitalocean.com/apps"
          echo "2. Add DO_APP_ID secret in GitHub repository settings"
          echo "skip_deploy=true" >> $GITHUB_OUTPUT
        else
          echo "skip_deploy=false" >> $GITHUB_OUTPUT
        fi

    - name: Install doctl
      if: steps.check_do.outputs.skip_deploy != 'true'
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Deploy to Digital Ocean App Platform
      if: steps.check_do.outputs.skip_deploy != 'true'
      run: |
        doctl apps create-deployment ${{ secrets.DO_APP_ID }} --wait

    - name: Verify deployment
      if: steps.check_do.outputs.skip_deploy != 'true'
      run: |
        doctl apps get ${{ secrets.DO_APP_ID }}

  # Playwright tests will be added later when package.json is configured
  # playwright:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Run E2E tests
  #     run: echo "Playwright tests will be added in future update"